main.main STEXT size=192 args=0x0 locals=0x168 funcid=0x0 align=0x0
	0x0000 00000 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	TEXT	main.main(SB), ABIInternal, $368-0
	0x0000 00000 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	MOVD	16(g), R16
	0x0004 00004 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	PCDATA	$0, $-2
	0x0004 00004 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	SUB	$240, RSP, R17
	0x0008 00008 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	CMP	R16, R17
	0x000c 00012 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	BLS	180
	0x0010 00016 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	PCDATA	$0, $-1
	0x0010 00016 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	SUB	$368, RSP, R20
	0x0014 00020 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	STP	(R29, R30), -8(R20)
	0x0018 00024 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	PCDATA	$0, $-2
	0x0018 00024 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	MOVD	R20, RSP
	0x001c 00028 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	PCDATA	$0, $-1
	0x001c 00028 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	SUB	$8, RSP, R29
	0x0020 00032 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	FUNCDATA	$0, gclocals·acF1O9X4FQHZUTLQivBEZA==(SB)
	0x0020 00032 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	FUNCDATA	$1, gclocals·MAZzCi+rKP4+9BB7UQ+fzg==(SB)
	0x0020 00032 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	FUNCDATA	$2, main.main.stkobj(SB)
	0x0020 00032 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	STP	(ZR, ZR), main..autotmp_1-48(SP)
	0x0024 00036 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	STP	(ZR, ZR), main..autotmp_1-32(SP)
	0x0028 00040 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	STP	(ZR, ZR), main..autotmp_1-16(SP)
	0x002c 00044 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	MOVD	$main..autotmp_2-312(SP), R20
	0x0030 00048 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	PCDATA	$0, $-2
	0x0030 00048 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	ADR	64, runtime.duffzero+192(R27)(R27)(REG)
	0x0034 00052 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	STP	(R29, R27), -24(RSP)
	0x0038 00056 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	SUB	$24, RSP, R29
	0x003c 00060 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	DUFFZERO	runtime.duffzero(SB)
	0x0040 00064 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	SUB	$8, RSP, R29
	0x0044 00068 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	PCDATA	$0, $-1
	0x0044 00068 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	MOVD	ZR, main..autotmp_2-56(SP)
	0x0048 00072 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	MOVD	$-9187201950435737472, R0
	0x004c 00076 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	MOVD	R0, main..autotmp_2-312(SP)
	0x0050 00080 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	MOVD	$main..autotmp_2-312(SP), R0
	0x0054 00084 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	MOVD	R0, main..autotmp_1-32(SP)
	0x0058 00088 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	PCDATA	$1, $1
	0x0058 00088 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	CALL	runtime.rand(SB)
	0x005c 00092 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:4)	MOVD	R0, main..autotmp_1-40(SP)
	0x0060 00096 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVD	$type:map[string]string(SB), R0
	0x0068 00104 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVD	$main..autotmp_1-48(SP), R1
	0x006c 00108 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVD	$go:string."foo"(SB), R2
	0x0074 00116 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVD	$3, R3
	0x0078 00120 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	PCDATA	$1, $0
	0x0078 00120 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	CALL	runtime.mapassign_faststr(SB)
	0x007c 00124 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVD	$3, R1
	0x0080 00128 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVD	R1, 8(R0)
	0x0084 00132 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	PCDATA	$0, $-3
	0x0084 00132 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVWU	runtime.writeBarrier(SB), R1
	0x008c 00140 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	PCDATA	$0, $-1
	0x008c 00140 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	PCDATA	$0, $-2
	0x008c 00140 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	CBZW	R1, 156
	0x0090 00144 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVD	(R0), R1
	0x0094 00148 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	CALL	runtime.gcWriteBarrier1(SB)
	0x0098 00152 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVD	R1, (R25)
	0x009c 00156 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVD	$go:string."foo"(SB), R1
	0x00a4 00164 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:5)	MOVD	R1, (R0)
	0x00a8 00168 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:6)	PCDATA	$0, $-1
	0x00a8 00168 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:6)	LDP	-8(RSP), (R29, R30)
	0x00ac 00172 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:6)	ADD	$368, RSP
	0x00b0 00176 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:6)	RET	(R30)
	0x00b4 00180 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:6)	NOP
	0x00b4 00180 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	PCDATA	$1, $-1
	0x00b4 00180 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	PCDATA	$0, $-2
	0x00b4 00180 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	MOVD	R30, R3
	0x00b8 00184 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	CALL	runtime.morestack_noctxt(SB)
	0x00bc 00188 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	PCDATA	$0, $-1
	0x00bc 00188 (/Users/hxzhouh/workspace/github/me/blog-example/go/go1.24/swiss_map/main.go:3)	JMP	0
	0x0000 90 0b 40 f9 f1 c3 03 d1 3f 02 10 eb 49 05 00 54  ..@.....?...I..T
	0x0010 f4 c3 05 d1 9d fa 3f a9 9f 02 00 91 fd 23 00 d1  ......?......#..
	0x0020 ff ff 13 a9 ff ff 14 a9 ff ff 15 a9 f4 c3 00 91  ................
	0x0030 9b 00 00 10 fd ef 3e a9 fd 63 00 d1 00 00 00 94  ......>..c......
	0x0040 fd 23 00 d1 ff 9b 00 f9 e0 c3 01 b2 e0 1b 00 f9  .#..............
	0x0050 e0 c3 00 91 e0 a7 00 f9 00 00 00 94 e0 a3 00 f9  ................
	0x0060 00 00 00 90 00 00 00 91 e1 e3 04 91 02 00 00 90  ................
	0x0070 42 00 00 91 e3 07 40 b2 00 00 00 94 e1 07 40 b2  B.....@.......@.
	0x0080 01 04 00 f9 1b 00 00 90 61 03 40 b9 81 00 00 34  ........a.@....4
	0x0090 01 00 40 f9 00 00 00 94 21 03 00 f9 01 00 00 90  ..@.....!.......
	0x00a0 21 00 00 91 01 00 00 f9 fd fb 7f a9 ff c3 05 91  !...............
	0x00b0 c0 03 5f d6 e3 03 1e aa 00 00 00 94 d1 ff ff 17  .._.............
	rel 60+4 t=R_CALLARM64 runtime.duffzero+192
	rel 88+4 t=R_CALLARM64 runtime.rand+0
	rel 96+8 t=R_ADDRARM64 type:map[string]string+0
	rel 108+8 t=R_ADDRARM64 go:string."foo"+0
	rel 120+4 t=R_CALLARM64 runtime.mapassign_faststr+0
	rel 132+8 t=R_ARM64_PCREL_LDST32 runtime.writeBarrier+0
	rel 148+4 t=R_CALLARM64 runtime.gcWriteBarrier1+0
	rel 156+8 t=R_ADDRARM64 go:string."foo"+0
	rel 184+4 t=R_CALLARM64 runtime.morestack_noctxt+0
go:cuinfo.producer.<unlinkable> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.main SDWARFCUINFO dupok size=0
	0x0000 6d 61 69 6e                                      main
main..inittask SNOPTRDATA size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
runtime.memequal64·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64+0
runtime.gcbits.0100000000000000 SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*map[string]string- SRODATA dupok size=20
	0x0000 00 12 2a 6d 61 70 5b 73 74 72 69 6e 67 5d 73 74  ..*map[string]st
	0x0010 72 69 6e 67                                      ring
type:*map[string]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 73 20 6b d9 08 08 08 36 00 00 00 00 00 00 00 00  s k....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[string]string-+0
	rel 48+8 t=R_ADDR type:map[string]string+0
type:.namedata.*map.group[string]string- SRODATA dupok size=26
	0x0000 00 18 2a 6d 61 70 2e 67 72 6f 75 70 5b 73 74 72  ..*map.group[str
	0x0010 69 6e 67 5d 73 74 72 69 6e 67                    ing]string
type:noalg.*map.group[string]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 39 a4 fb 83 00 08 08 36 00 00 00 00 00 00 00 00  9......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.group[string]string-+0
	rel 48+8 t=R_ADDR type:noalg.map.group[string]string+0
runtime.gcbits.aaaaaaaa00000000 SRODATA dupok size=8
	0x0000 aa aa aa aa 00 00 00 00                          ........
type:.namedata.*[8]struct { key string; elem string }- SRODATA dupok size=40
	0x0000 00 26 2a 5b 38 5d 73 74 72 75 63 74 20 7b 20 6b  .&*[8]struct { k
	0x0010 65 79 20 73 74 72 69 6e 67 3b 20 65 6c 65 6d 20  ey string; elem 
	0x0020 73 74 72 69 6e 67 20 7d                          string }
type:noalg.*[8]struct { key string; elem string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 72 68 0e 11 00 08 08 36 00 00 00 00 00 00 00 00  rh.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]struct { key string; elem string }-+0
	rel 48+8 t=R_ADDR type:noalg.[8]struct { key string; elem string }+0
runtime.gcbits.5555555500000000 SRODATA dupok size=8
	0x0000 55 55 55 55 00 00 00 00                          UUUU....
type:.namedata.*struct { key string; elem string }- SRODATA dupok size=37
	0x0000 00 23 2a 73 74 72 75 63 74 20 7b 20 6b 65 79 20  .#*struct { key 
	0x0010 73 74 72 69 6e 67 3b 20 65 6c 65 6d 20 73 74 72  string; elem str
	0x0020 69 6e 67 20 7d                                   ing }
type:noalg.*struct { key string; elem string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8a 75 45 44 00 08 08 36 00 00 00 00 00 00 00 00  .uED...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { key string; elem string }-+0
	rel 48+8 t=R_ADDR type:noalg.struct { key string; elem string }+0
runtime.gcbits.0500000000000000 SRODATA dupok size=8
	0x0000 05 00 00 00 00 00 00 00                          ........
type:.importpath.. SRODATA dupok size=2
	0x0000 00 00                                            ..
type:.namedata.key- SRODATA dupok size=5
	0x0000 00 03 6b 65 79                                   ..key
type:.namedata.elem- SRODATA dupok size=6
	0x0000 00 04 65 6c 65 6d                                ..elem
type:noalg.struct { key string; elem string } SRODATA dupok size=128
	0x0000 20 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00   ...............
	0x0010 2b cc 09 12 02 08 08 19 00 00 00 00 00 00 00 00  +...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.0500000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { key string; elem string }-+0
	rel 44+4 t=RelocType(-32763) type:noalg.*struct { key string; elem string }+0
	rel 48+8 t=R_ADDR type:.importpath..+0
	rel 56+8 t=R_ADDR type:noalg.struct { key string; elem string }+80
	rel 80+8 t=R_ADDR type:.namedata.key-+0
	rel 88+8 t=R_ADDR type:string+0
	rel 104+8 t=R_ADDR type:.namedata.elem-+0
	rel 112+8 t=R_ADDR type:string+0
type:.namedata.*[]struct { key string; elem string }- SRODATA dupok size=39
	0x0000 00 25 2a 5b 5d 73 74 72 75 63 74 20 7b 20 6b 65  .%*[]struct { ke
	0x0010 79 20 73 74 72 69 6e 67 3b 20 65 6c 65 6d 20 73  y string; elem s
	0x0020 74 72 69 6e 67 20 7d                             tring }
type:*[]struct { key string; elem string } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1d 09 ed 5a 08 08 08 36 00 00 00 00 00 00 00 00  ...Z...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]struct { key string; elem string }-+0
	rel 48+8 t=R_ADDR type:[]struct { key string; elem string }+0
type:[]struct { key string; elem string } SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f4 98 d4 7e 02 08 08 17 00 00 00 00 00 00 00 00  ...~............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]struct { key string; elem string }-+0
	rel 44+4 t=RelocType(-32763) type:*[]struct { key string; elem string }+0
	rel 48+8 t=R_ADDR type:noalg.struct { key string; elem string }+0
type:noalg.[8]struct { key string; elem string } SRODATA dupok size=72
	0x0000 00 01 00 00 00 00 00 00 f8 00 00 00 00 00 00 00  ................
	0x0010 80 af a9 e4 02 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.5555555500000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]struct { key string; elem string }-+0
	rel 44+4 t=RelocType(-32763) type:noalg.*[8]struct { key string; elem string }+0
	rel 48+8 t=R_ADDR type:noalg.struct { key string; elem string }+0
	rel 56+8 t=R_ADDR type:[]struct { key string; elem string }+0
type:.namedata.ctrl- SRODATA dupok size=6
	0x0000 00 04 63 74 72 6c                                ..ctrl
type:.namedata.slots- SRODATA dupok size=7
	0x0000 00 05 73 6c 6f 74 73                             ..slots
type:noalg.map.group[string]string SRODATA dupok size=128
	0x0000 08 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................
	0x0010 91 39 e6 4e 02 08 08 19 00 00 00 00 00 00 00 00  .9.N............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.aaaaaaaa00000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.group[string]string-+0
	rel 44+4 t=RelocType(-32763) type:noalg.*map.group[string]string+0
	rel 48+8 t=R_ADDR type:.importpath..+0
	rel 56+8 t=R_ADDR type:noalg.map.group[string]string+80
	rel 80+8 t=R_ADDR type:.namedata.ctrl-+0
	rel 88+8 t=R_ADDR type:uint64+0
	rel 104+8 t=R_ADDR type:.namedata.slots-+0
	rel 112+8 t=R_ADDR type:noalg.[8]struct { key string; elem string }+0
runtime.strhash·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.strhash+0
type:map[string]string SRODATA dupok size=112
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 59 a1 e7 29 02 08 08 35 00 00 00 00 00 00 00 00  Y..)...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 08 01 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x0060 10 00 00 00 00 00 00 00 01 00 00 00              ............
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[string]string-+0
	rel 44+4 t=RelocType(-32763) type:*map[string]string+0
	rel 48+8 t=R_ADDR type:string+0
	rel 56+8 t=R_ADDR type:string+0
	rel 64+8 t=R_ADDR type:noalg.map.group[string]string+0
	rel 72+8 t=R_ADDR runtime.strhash·f+0
go:string."foo" SRODATA dupok size=3
	0x0000 66 6f 6f                                         foo
runtime.gcbits.0400000000000000 SRODATA dupok size=8
	0x0000 04 00 00 00 00 00 00 00                          ........
gclocals·acF1O9X4FQHZUTLQivBEZA== SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
gclocals·MAZzCi+rKP4+9BB7UQ+fzg== SRODATA dupok size=18
	0x0000 02 00 00 00 27 00 00 00 00 00 00 00 00 00 00 00  ....'...........
	0x0010 00 08                                            ..
main.main.stkobj SRODATA static size=40
	0x0000 02 00 00 00 00 00 00 00 c8 fe ff ff 08 01 00 00  ................
	0x0010 00 01 00 00 00 00 00 00 d0 ff ff ff 30 00 00 00  ............0...
	0x0020 18 00 00 00 00 00 00 00                          ........
	rel 20+4 t=R_ADDROFF runtime.gcbits.aaaaaaaa00000000+0
	rel 36+4 t=R_ADDROFF runtime.gcbits.0400000000000000+0
